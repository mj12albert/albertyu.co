name: Deploy to Amazon ECS

on:
  push:
    branches:
      - develop

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: albertyu.co
  ECR_PUBLIC_REGISTRY: public.ecr.aws/a2k4l4h2
  ECS_SERVICE: ecs-service
  ECS_CLUSTER: ecs-cluster
  ECS_TASK_DEFINITION: ecs-task-definition.json
  CONTAINER_NAME: app

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-22.04
    environment: testing

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get short commit hash
        id: get-short-sha
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_PUBLIC_REGISTRY }}

      - name: Build, tag, push image to ECR
        id: build-and-push-image
        env:
          ECR_REGISTRY: ${{ env.ECR_PUBLIC_REGISTRY }}
          IMAGE_TAG: ${{ steps.get-short-sha.outputs.short_sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Check task definition
        run: |
          aws ecs describe-task-definition --task-definition app \
          --query taskDefinition > ecs-task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: update-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-and-push-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true